diff -uNr Python-2.7.2.orig/Lib/ctypes/__init__.py Python-2.7.2/Lib/ctypes/__init__.py
--- Python-2.7.2.orig/Lib/ctypes/__init__.py	2011-06-11 17:46:24.000000000 +0200
+++ Python-2.7.2/Lib/ctypes/__init__.py	2012-08-30 13:40:38.837698797 +0200
@@ -272,31 +272,34 @@
     else:
         set_conversion_mode("ascii", "strict")
 
-    class c_wchar_p(_SimpleCData):
-        _type_ = "Z"
-
-    class c_wchar(_SimpleCData):
-        _type_ = "u"
-
-    POINTER(c_wchar).from_param = c_wchar_p.from_param #_SimpleCData.c_wchar_p_from_param
-
-    def create_unicode_buffer(init, size=None):
-        """create_unicode_buffer(aString) -> character array
-        create_unicode_buffer(anInteger) -> character array
-        create_unicode_buffer(aString, anInteger) -> character array
-        """
-        if isinstance(init, (str, unicode)):
-            if size is None:
-                size = len(init)+1
-            buftype = c_wchar * size
-            buf = buftype()
-            buf.value = init
-            return buf
-        elif isinstance(init, (int, long)):
-            buftype = c_wchar * init
-            buf = buftype()
-            return buf
-        raise TypeError(init)
+# The wchar stuff causes a crash on Android (the bionic C library doesn't
+# implement wchar_t anyway)
+#
+#    class c_wchar_p(_SimpleCData):
+#        _type_ = "Z"
+#
+#    class c_wchar(_SimpleCData):
+#        _type_ = "u"
+#
+#    POINTER(c_wchar).from_param = c_wchar_p.from_param #_SimpleCData.c_wchar_p_from_param
+#
+#    def create_unicode_buffer(init, size=None):
+#        """create_unicode_buffer(aString) -> character array
+#        create_unicode_buffer(anInteger) -> character array
+#        create_unicode_buffer(aString, anInteger) -> character array
+#        """
+#        if isinstance(init, (str, unicode)):
+#            if size is None:
+#                size = len(init)+1
+#            buftype = c_wchar * size
+#            buf = buftype()
+#            buf.value = init
+#            return buf
+#        elif isinstance(init, (int, long)):
+#            buftype = c_wchar * init
+#            buf = buftype()
+#            return buf
+#        raise TypeError(init)
 
 POINTER(c_char).from_param = c_char_p.from_param #_SimpleCData.c_char_p_from_param
 
